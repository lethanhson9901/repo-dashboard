name: Update and Deploy to GitHub Pages
on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-repos:
    runs-on: ubuntu-latest
    if: "github.event_name == 'schedule' || (contains(github.event.head_commit.message, '[update-repos]') && !contains(github.event.head_commit.message, 'Update starred repos data'))"
    env:
      GH_USERNAME: ${{ secrets.GH_USERNAME }}
      GH_PAT: ${{ secrets.GH_PAT }}
      OUTPUT_FILE: src/data/repos.json
      GITHUB_API_VERSION: 2022-11-28
      ITEMS_PER_PAGE: 100
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create data directory
        run: mkdir -p src/data
          
      - name: Run repo fetcher
        run: python backend/pull_your_star_repos.py

      - name: Run Reddit collector
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
        run: python backend/reddit/main.py
        
      - name: Commit and push if changed
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add src/data/repos.json src/data/reddit/reddit_content.json
          git diff --quiet && git diff --staged --quiet || (git commit -m "[ci run]: Update starred repos data" && git push)

  build:
    needs: update-repos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main  # Ensure we get the latest changes
      
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Install dependencies
        run: npm install
        
      - name: Build
        run: npm run build
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Fallback build and deploy if update-repos is skipped
  build-without-update:
    runs-on: ubuntu-latest
    if: "github.event_name != 'schedule' && (!contains(github.event.head_commit.message, '[update-repos]') || contains(github.event.head_commit.message, 'Update starred repos data'))"
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Install dependencies
        run: npm install
        
      - name: Build
        run: npm run build
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy-without-update:
    needs: build-without-update
    runs-on: ubuntu-latest
    if: "github.event_name != 'schedule' && (!contains(github.event.head_commit.message, '[update-repos]') || contains(github.event.head_commit.message, 'Update starred repos data'))"
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
